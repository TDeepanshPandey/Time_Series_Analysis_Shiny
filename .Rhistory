timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:15]
fit <- arima(log(timeseries_train), c(8,3,1))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[16:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:15]
fit <- arima(log(timeseries_train), c(8,2,1))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[16:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:15]
fit <- arima(log(timeseries_train), c(8,2,0))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[16:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:15]
fit <- arima(log(timeseries_train), c(8,2,3))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[16:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:15]
fit <- arima(log(timeseries_train), c(8,2,2))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[16:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:20]
fit <- arima(log(timeseries_train), c(8,2,2))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[21:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:20]
fit <- arima(log(timeseries_train), c(8,2,0))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[21:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:20]
fit <- arima(log(timeseries_train), c(8,2,2))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[21:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:20]
fit <- arima(log(timeseries_train), c(8,2,2))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[21:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:20]
fit <- arima(log(timeseries_train), c(9,2,2))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[21:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:20]
fit <- arima(log(timeseries_train), c(7,2,2))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[21:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
# Taking a small dataset
timeseries_train <- timeseries[1:20]
fit <- arima(log(timeseries_train), c(8,2,2))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
timeseries_test <- timeseries[21:length(timeseries)]
timeseries_test
round(pred1,2)
result <- c(timeseries_train, round(pred1,2))
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
round(pred1,2)
timeseries_test - round(pred1,2)
sum(timeseries_test - round(pred1,2))
sum(timeseries_test - round(pred1,2))/sum(timeseries_test)
sum(timeseries_test - round(pred1,2))/sum(timeseries_test)*100
sum(abs(timeseries_test - round(pred1,2)))/sum(timeseries_test)
sum(abs(timeseries_test - round(pred1,2)))/sum(timeseries_test) * 100
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot(timeseries)
runApp()
timeseries
library(ggplot2)
ggplot(timeseries)
ggplot(timeseries, aes(timeseries,1:27)
)
ggplot(1:27,timeseries)
ggplot(timeseries, aes(timeseries,c(1:27)))
1:27
y_axis = 1:27
ggplot(timeseries, aes(timeseries,y_axis))
ggplot(timeseries, aes(timeseries))
ggplot(timeseries, aes(x=1:27, y = timeseries))
ggplot(timeseries, aes(x=1:27, y = timeseries))
ggplot(timeseries, aes(x=1:27, y=timeseries)) + geom_line()
ggplot(timeseries, aes(y=timeseries)) + geom_line()
runApp()
runApp()
runApp()
ggplot(timeseries, aes(x=1:27, y=timeseries)) +
geom_line(color="black", size=2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
timeseries <- reactive({
diff(log(timeseries))
})
timeseries()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
diff(log(timeseries))
diff(log(timeseries))
timeseries
time_series_values <- c(1.129,1.127, 1.135, 1.122, 1.130,
1.122, 1.123, 1.121, 1.130,1.168,
1.44, 1.43, 1.43, 1.38, 1.36,
1.33, 1.41, 1.45, 1.40, 1.43,
1.28, 1.45, 1.40, 1.41, 1.44,
1.43, 1.44)
### Creating the time series object
timeseries <- ts(data = time_series_values,
start = 1,
end = 27,
frequency = 1,
deltat = 1)
timeseries
log(timeseries)
diff(log(timeseries))\
diff(log(timeseries))
data.frame(1:27,time_series_values)
data.frame(1:27,time_series_values,row.names = c("Version","Values"))
data.frame(1:27,time_series_values,colnames() = c("Version","Values"))
data.frame(1:27,time_series_values,colnames(c("Version","Values")))
data.frame(1:27,time_series_values)
time_series_values <- c(1.129,1.127, 1.135, 1.122, 1.130,
1.122, 1.123, 1.121, 1.130,1.168,
1.44, 1.43, 1.43, 1.38, 1.36,
1.33, 1.41, 1.45, 1.40, 1.43,
1.28, 1.45, 1.40, 1.41, 1.44,
1.43, 1.44)
timeseriesdataset <- data.frame(1:27,time_series_values)
colnames(timeseriesdataset) <- c("Version","Values")
### Creating the time series object
timeseries <- ts(data = time_series_values,
start = 1,
end = 27,
frequency = 1,
deltat = 1)
ggplot(timeseriesdataset, aes(x=timeseriesdataset$Values, y=timeseriesdataset$Version)) +
geom_line(color="black", size=1) +
xlab("Version") +
ylab("Timeseries Value")
ggplot(timeseriesdataset, aes(x=timeseriesdataset$Version, y=timeseriesdataset$Values)) +
geom_line(color="black", size=1) +
xlab("Version") +
ylab("Timeseries Value")
runApp()
runApp()
timeseries
length(timeseries)
ggplot(timeseries, aes(x=1:length(timeseries), y=timeseries)) +
geom_line(color="black", size=1) +
xlab("Version") +
ylab("Timeseries Value")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runif
?runif
runApp()
v <- reactiveValues(data=timeseries)
v
v()
v.values
v.value
value()
v$data
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
0*27
c(0*27)
c(0.*27)
c(1*27)
c(1:27*0)
runApp()
runApp()
c(1:27*0)
length(c(1:27*0))
runApp()
1:27*0
timeseriesdataset <- data.frame(1:27,time_series_values,1:27*0)
colnames(timeseriesdataset) <- c("Version","Values","Empty"
)
timeseriesdataset$Empty
runApp()
runApp()
1:27*NA
timeseriesdataset <- data.frame(1:27,time_series_values,1:27*NA)
colnames(timeseriesdataset) <- c("Version","Values","Empty")
runApp()
runApp()
timeseriesdataset <- data.frame(1:27,time_series_values,1:27*0)
colnames(timeseriesdataset) <- c("Version","Values","Empty")
runApp()
runApp()
timeseriesdataset <- data.frame(1:27,time_series_values,1:27*NA)
colnames(timeseriesdataset) <- c("Version","Values","Empty")
runApp()
timeseriesdataset$Empty
timeseriesdataset <- data.frame(1:27,time_series_values,1:27*0)
colnames(timeseriesdataset) <- c("Version","Values","Empty")
timeseriesdataset$Empty
runApp()
diff(diff(log(timeseriesdataset$Empty)))
is.null(diff(diff(log(timeseriesdataset$Empty))))
is.NA(diff(diff(log(timeseriesdataset$Empty))))
is.Empty(diff(diff(log(timeseriesdataset$Empty))))
is.null(diff(diff(log(timeseriesdataset$Empty))))
is.null(NA)
is.null(NA)
is.null()
runApp()
runApp()
runApp()
time_series_values <- c(1.129,1.127, 1.135, 1.122, 1.130,
1.122, 1.123, 1.121, 1.130,1.168,
1.44, 1.43, 1.43, 1.38, 1.36,
1.33, 1.41, 1.45, 1.40, 1.43,
1.28, 1.45, 1.40, 1.41, 1.44,
1.43, 1.44)
timeseriesdataset <- data.frame(1:27,time_series_values,1:27*0)
colnames(timeseriesdataset) <- c("Version","Values","Empty")
### Creating the time series object
timeseries <- ts(data = time_series_values,
start = 1,
end = 27,
frequency = 1,
deltat = 1)
timeseries_train <- timeseries[1:20]
fit <- arima(log(timeseries_train), c(8,2,2))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
result <- c(timeseries_train, round(pred1,2))
timeseries_test <- timeseries[21:length(timeseries)]
print(timeseries_test)
print(round(result,2))
timeseries_train <- timeseries[1:20]
fit <- arima(log(timeseries_train), c(8,2,0))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
result <- c(timeseries_train, round(pred1,2))
timeseries_test <- timeseries[21:length(timeseries)]
print(timeseries_test)
print(round(result,2))
timeseries_train <- timeseries[1:20]
fit <- arima(log(timeseries_train), c(8,2,0))
pred <- predict(fit, n.ahead = length(timeseries) - length(timeseries_train))
pred1 <- 2.718^pred$pred
result <- c(timeseries_train, round(pred1,2))
timeseries_test <- timeseries[21:length(timeseries)]
print(timeseries_test)
print(round(pred1,2))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
timeseries
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
plot(result,type="l",col="green")
lines(timeseries,type="l",col="red")
runApp()
runApp()
setwd("E:/My Work/Univesity Bonn/Semester 4/Predictive Analysis Seminar/R code")
runApp()
runApp()
runApp()
runApp()
runApp()
length(timeseries)
length(timeseries) - 7
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot() +
geom_line(data=timeseries, aes(x=1:length(timeseries), y=predplot()),color="green", size=1) +
geom_line(data=timeseries, aes(x=1:length(timeseries), y=timeseries),color="red") +
scale_color_discrete(name="Time Series",
labels=c("Predicted","Actual"))+
xlab("Version") +
ylab("Timeseries")
ggplot() +
geom_line(data=timeseries, aes(x=1:length(timeseries), y=result),color="green", size=1) +
geom_line(data=timeseries, aes(x=1:length(timeseries), y=timeseries),color="red") +
scale_color_discrete(name="Time Series",
labels=c("Predicted","Actual"))+
xlab("Version") +
ylab("Timeseries")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
